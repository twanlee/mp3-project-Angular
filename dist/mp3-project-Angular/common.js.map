{"version":3,"sources":["./src/app/authorization/auth-guard.service.ts","./src/app/services/artist/artist.service.ts","./src/app/services/interactive/active.service.ts","./src/app/services/user/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../services/auth/authentication.service';\r\nimport {SongService} from '../services/songs/song.service';\r\nimport {ISong} from '../interfaces/isong';\r\nimport {IPlaylist} from '../interfaces/iplaylist';\r\nimport {PlaylistService} from '../services/playlist/playlist.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  profile: string = 'profile';\r\n  edit: string = 'edit';\r\n  song: string = 'song';\r\n  delete: string = 'delete';\r\n  playlist: string = 'playlist';\r\n  add: string = 'add';\r\n\r\n  constructor(private router: Router,\r\n              private authenticationService: AuthenticationService,\r\n              private songService: SongService,\r\n              private playlistService: PlaylistService,\r\n              private toastService: ToastrService) {\r\n  }\r\n\r\n  checkPermission(target: string, str: string[]): boolean {\r\n    for (let i = 0; i < str.length; i++) {\r\n      if (target == str[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    let str = route.url.toString().split(',');\r\n\r\n    if (currentUser) {\r\n      // check if route is restricted by role\r\n      if (route.data.roles && route.data.roles.indexOf(currentUser.role) == -1) {\r\n        // role not authorised so redirect to home page\r\n        this.router.navigate(['/']);\r\n        return false;\r\n      }\r\n      if (this.checkPermission(this.profile, str) && this.checkPermission(this.edit, str)) {\r\n        if ((+route.paramMap.get('id')) != currentUser.id) {\r\n          this.toastService.error(\"Bạn không có quyền chỉnh sửa profile này!\");\r\n          this.router.navigate(['/']);\r\n          return false;\r\n        }\r\n      }\r\n      if (this.checkPermission(this.edit, str)) {\r\n        let songId = + route.paramMap.get(\"id\");\r\n        let currentSong: ISong;\r\n        this.songService.getSongById(songId).subscribe(data => {\r\n          currentSong=data;\r\n          let userId = currentSong.user.id;\r\n          if (userId != currentUser.id) {\r\n            this.toastService.error('Bạn không có quyền chỉnh sửa bài hát này!');\r\n            this.router.navigate(['/']);\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n      if(this.checkPermission(this.song, str) && this.checkPermission(this.add,str)){\r\n        let playlistId = +route.paramMap.get('id');\r\n        let currentPlaylist: IPlaylist;\r\n        this.playlistService.getPlayListById(playlistId).subscribe(data =>{\r\n          currentPlaylist = data;\r\n          let userId = currentPlaylist.userId;\r\n          console.log(userId)\r\n          console.log(currentUser.id)\r\n          if (userId != currentUser.id) {\r\n            this.toastService.error(\"Bạn không có quyền chỉnh sửa playlist này!\");\r\n            this.router.navigate(['/']);\r\n            return false;\r\n          }\r\n        })\r\n      }\r\n\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n    this.toastService.error('Tính năng này yêu cầu đăng nhập!');\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IArtist} from '../../interfaces/iartist';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n  url_api = 'http://localhost:8080/api/artist';\r\n  constructor(private http: HttpClient) { }\r\n  getAll(): Observable<IArtist[]> {\r\n    return this.http.get<IArtist[]>(this.url_api + '/list');\r\n  }\r\n\r\n  getArtistById(id: number): Observable<any> {\r\n    return this.http.get<IArtist>(this.url_api + '/' + id + '/detail');\r\n  }\r\n\r\n  saveArtist(data: IArtist): Observable<IArtist> {\r\n    return this.http.post<IArtist>(this.url_api + '/save', data);\r\n  }\r\n\r\n  deleteArtistById(id: number): Observable<any> {\r\n    return this.http.delete<any>(this.url_api + '/' + id + '/delete');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IReview} from '../../interfaces/ireview';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActiveService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getReviewBySong(songId: number): Observable<IReview> {\r\n      return this.http.get<IReview>(\"http://localhost:8080/getReview/song/\"+songId);\r\n  }\r\n\r\n  public likeSong(songId: number, userId: number): Observable<IReview> {\r\n      return this.http.get<IReview>(\"http://localhost:8080/likeSong/\"+songId+\"/\"+userId);\r\n  }\r\n\r\n  public getReviewByPlaylist(playlistId: number): Observable<IReview> {\r\n    return this.http.get<IReview>(\"http://localhost:8080/getReview/song/\"+playlistId);\r\n  }\r\n\r\n  public likePlaylist(playlistId: number, userId: number): Observable<IReview> {\r\n    return this.http.get<IReview>(\"http://localhost:8080/likePlaylist/\"+playlistId+\"/\"+userId);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {IUser} from '../../interfaces/user/user';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ISong} from \"../../interfaces/isong\";\r\nimport {IProfile} from '../../interfaces/user/profile';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private API_USER_URL = 'http://localhost:8080/api/user/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getUserList(): Observable<any> {\r\n    return this.http.get<IUser[]>(this.API_USER_URL + 'list');\r\n  }\r\n\r\n  getAllSongByUser(id: number): Observable<ISong[]> {\r\n    return this.http.get<ISong[]>(this.API_USER_URL + id + \"/songs\")\r\n  }\r\n  getProfileByUserId(id: number): Observable<any> {\r\n    return this.http.get<IProfile>(this.API_USER_URL + id + '/profile')\r\n  }\r\n  getUserById(id: number): Observable<IUser> {\r\n    return this.http.get<IUser>(this.API_USER_URL + id +'/detail')\r\n  }\r\n  editProfileByUserId(id: number, profile: IProfile): Observable<IProfile> {\r\n    return this.http.put<IProfile>(this.API_USER_URL + id + '/edit', profile)\r\n  }\r\n  changePassword(id: number,password: string): Observable<any> {\r\n    return this.http.post<IUser>(this.API_USER_URL+id+'/password/update',password);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}