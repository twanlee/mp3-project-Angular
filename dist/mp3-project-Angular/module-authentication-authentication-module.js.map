{"version":3,"sources":["./src/app/components/user/register/register.component.ts","./src/app/components/user/register/register.component.html","./src/app/module/authentication/authentication-routing.module.ts","./src/app/module/authentication/authentication.module.ts","./src/app/services/register/register.service.ts"],"names":[],"mappings":"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","file":"module-authentication-authentication-module.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {RegisterService} from \"../../../services/register/register.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUser} from '../../../interfaces/user/user';\r\nimport {TokenStorageService} from '../../../services/token-storage.service';\r\n\r\n\r\nfunction comparePassword(c: AbstractControl) {\r\n  const v = c.value;\r\n  return (v.password === v.confirmPassword) ? null : {\r\n    passwordnotmatch: true\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  isSuccessful = false;\r\n  constructor(private fb: FormBuilder,\r\n              private register: RegisterService,\r\n              private router: Router,\r\n              private tokenStorage: TokenStorageService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      pwGroup: this.fb.group({\r\n        password: ['',[Validators.minLength(6)]],\r\n        confirmPassword: ''\r\n      }, {validator: comparePassword})\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.registerForm.valid) {\r\n      const data = this.registerForm.value;\r\n      const user: IUser = {\r\n        email: data.email,\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        password: data.pwGroup.password\r\n      };\r\n      // console.log(user)\r\n      this.register.registerUser(user).subscribe(() => {\r\n        this.registerForm.reset(\"\");\r\n        // this.isSuccessful = true;\r\n        this.tokenStorage.saveRegistered(this.isSuccessful = true);\r\n        this.router.navigate(['/login']);\r\n      }, error => {\r\n        this.isSuccessful = false;\r\n        alert('Email đã tồn tại');\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"page-wrapper bg-gra-01 p-t-180 p-b-100 font-poppins\">\r\n  <div class=\"wrapper wrapper--w780\">\r\n    <div class=\"card card-3\">\r\n      <div class=\"card-heading\"></div>\r\n      <div class=\"card-body\">\r\n        <h2 class=\"title\">Đăng ký thành viên</h2>\r\n        <form method=\"post\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"input-group\">\r\n            <input class=\"input--style-3\" type=\"email\" formControlName=\"email\" placeholder=\"email@vidu.com\">\r\n          </div>\r\n          <div class=\"alert alert-danger\" role=\"alert\" style=\"top: -15px\" *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\r\n            Email chưa hợp lệ\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input class=\"input--style-3 js-datepicker\" type=\"text\" formControlName=\"firstName\" placeholder=\"Tên\">\r\n          </div>\r\n          <div class=\"alert alert-danger\" style=\"top: -15px\" role=\"alert\" *ngIf=\"registerForm.get('firstName').invalid && registerForm.get('firstName').touched\">\r\n            Vui lòng nhập đủ thông tin\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input class=\"input--style-3 js-datepicker\" type=\"text\" formControlName=\"lastName\" placeholder=\"Họ\">\r\n          </div>\r\n          <div class=\"alert alert-danger\" role=\"alert\" style=\"top: -15px\" *ngIf=\"registerForm.get('lastName').invalid && registerForm.get('lastName').touched\">\r\n            Vui lòng nhập đủ thông tin\r\n          </div>\r\n          <fieldset formGroupName=\"pwGroup\">\r\n            <div class=\"input-group\">\r\n              <input class=\"input--style-3\" type=\"password\" placeholder=\"Mật khẩu\" formControlName=\"password\">\r\n            </div>\r\n            <div class=\"alert alert-danger\" role=\"alert\" style=\"top: -15px\" *ngIf=\"registerForm.get('pwGroup').get('password').invalid && registerForm.get('pwGroup').get('password').touched\">\r\n              Mật khẩu ít nhất 6 ký tự!\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <input class=\"input--style-3\" type=\"password\" placeholder=\"Nhập lại mật khẩu\" formControlName=\"confirmPassword\">\r\n            </div>\r\n          </fieldset>\r\n          <div class=\"alert alert-danger\" role=\"alert\" style=\"top: -15px\"\r\n               *ngIf=\"registerForm.hasError('passwordnotmatch', ['pwGroup']) && registerForm.get('pwGroup').touched\">\r\n            Mật khẩu chưa trùng khớp!\r\n          </div>\r\n          <div class=\"p-t-10\">\r\n            <button class=\"btn btn--pill btn--green\" type=\"submit\">Tạo tài khoản</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RegisterComponent} from '../../components/user/register/register.component';\r\nimport {LoginComponent} from '../../components/user/login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: RegisterComponent},\r\n  // {path: '', component: LoginComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport {RegisterComponent} from '../../components/user/register/register.component';\r\nimport {LoginComponent} from '../../components/user/login/login.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppRoutingModule} from '../../app-routing.module';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MaterialModule} from '../../material.module';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {NgxAudioPlayerModule} from 'ngx-audio-player';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {CKEditorModule} from '@ckeditor/ckeditor5-angular';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthenticationRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    // BrowserAnimationsModule,\r\n    MaterialModule,\r\n    MatInputModule,\r\n    ToastrModule.forRoot(),\r\n    NgbModule\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IUser} from \"../../interfaces/user/user\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  url = \"http://localhost:8080/api/register\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  registerUser(data: IUser): Observable<IUser> {\r\n    return this.http.post<IUser>(this.url, data);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}